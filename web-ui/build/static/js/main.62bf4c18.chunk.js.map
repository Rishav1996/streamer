{"version":3,"sources":["constant.js","Pages/Login.js","Pages/Posts.js","Pages/CreatePost.js","Pages/Main.js","Pages/Analytics.js","App.js","index.js"],"names":["LIGHT_COLOR","DARK_COLOR","SECONDARY_COLOR","BACKGROUND_COLOR","LOGIN_FLAG","ANALYTICS_FLAG","Title","Typography","Login","props","state","user","style","height","justify","align","span","size","preview","width","src","fontSize","color","level","type","backgroundColor","layout","Item","label","value","this","onChange","e","setState","target","name","placeholder","background","borderWidth","padding","border","onClick","preventDefault","Cookies","set","updateFlag","Component","Posts","fetchData","posts","u_name","get","fetch","method","mode","headers","Accept","body","JSON","stringify","then","response","json","data","catch","error","console","log","extra","icon","SyncOutlined","itemLayout","dataSource","renderItem","item","Meta","title","href","post_text","description","LikeFilled","likes","CommentOutlined","comments","ShareAltOutlined","shares","CreatePost","onPreview","actions","maxCount","listType","PlusOutlined","marginTop","Content","Layout","Sider","Main","groups","forEach","push","paddingLeft","paddingTop","paddingBottom","defaultSelectedKeys","length","theme","overflowY","Chart","register","StreamingPlugin","socket","io","Analytics","intervalID","undefined","duration","refresh","optionsActiveUsers","animation","plugins","legend","display","scales","x","grid","realtime","onRefresh","chart","datasets","dataset","Date","now","y","active_user","yAxes","ticks","beginAtZero","optionsLikes","optionsPosts","optionsShares","optionsComments","filterMessages","message","tag","parseInt","active_users","no_of_likes","no_of_shares","no_of_comments","no_of_posts","emotions","fill","borderColor","tension","on","parse","setInterval","forceUpdate","CARD_HEIGHT","activeUsersSeries","emotionsSeries","emotionsLabels","Object","keys","options","showIcon","series","labels","App","flag","FLAG","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62bf4c18.chunk.js","sourcesContent":["export const LIGHT_COLOR = \"#E0F4FE\"\r\nexport const DARK_COLOR = \"#0C3F60\"\r\nexport const PRIMARY_COLOR = \"#FFB818\"\r\nexport const SECONDARY_COLOR = \"#FFE100\"\r\nexport const BACKGROUND_COLOR = \"#000F1B\"\r\n\r\nexport const LOGIN_FLAG = \"LOGIN\"\r\nexport const MAIN_FLAG = \"MAIN\"\r\nexport const ANALYTICS_FLAG = \"ANALYTICS\"\r\n","import {\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Typography,\r\n  Space,\r\n  Image,\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  ANALYTICS_FLAG,\r\n  DARK_COLOR,\r\n  MAIN_FLAG,\r\n  SECONDARY_COLOR,\r\n} from \"./../constant\";\r\n\r\nimport Cookies from 'js-cookie'\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row style={{ height: \"100vh\" }} justify=\"center\" align=\"middle\">\r\n          <Col align=\"center\" span={11}>\r\n            <Space align=\"top\" size=\"middle\">\r\n              <Image\r\n                preview={false}\r\n                width={100}\r\n                src=\"./../assets/streaming.png\"\r\n              />\r\n              <Title\r\n                style={{\r\n                  fontSize: 90,\r\n                  color: SECONDARY_COLOR,\r\n                }}\r\n                level=\"1\"\r\n              >\r\n                Streamer\r\n              </Title>\r\n            </Space>\r\n          </Col>\r\n          <Col span={2}>\r\n            <Divider\r\n              type=\"vertical\"\r\n              style={{ backgroundColor: DARK_COLOR, height: \"45vh\", width: 2 }}\r\n            ></Divider>\r\n          </Col>\r\n          <Col span={11}>\r\n            <Form layout=\"vertical\" style={{ width: 400 }}>\r\n              <Form.Item\r\n                label={\r\n                  <span style={{ color: SECONDARY_COLOR, fontSize: 20 }}>\r\n                    User Name\r\n                  </span>\r\n                }\r\n                value={this.state.user}\r\n                onChange={(e) => {\r\n                  this.setState({ ...this.state, user: e.target.value });\r\n                }}\r\n                name=\"username\"\r\n              >\r\n                <Input\r\n                  placeholder=\"username\"\r\n                  style={{\r\n                    background: \"transparent\",\r\n                    color: \"white\",\r\n                    borderWidth: 2,\r\n                    padding: 10,\r\n                  }}\r\n                ></Input>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label={\r\n                  <span style={{ color: SECONDARY_COLOR, fontSize: 20 }}>\r\n                    Password\r\n                  </span>\r\n                }\r\n                name=\"password\"\r\n              >\r\n                <Input\r\n                  placeholder=\"password\"\r\n                  style={{\r\n                    background: \"transparent\",\r\n                    color: \"white\",\r\n                    borderWidth: 2,\r\n                    padding: 10,\r\n                  }}\r\n                ></Input>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Row justify=\"end\">\r\n                  <Col>\r\n                    <Space justify=\"end\">\r\n                      <Button\r\n                        size=\"large\"\r\n                        style={{\r\n                          background: SECONDARY_COLOR,\r\n                          color: DARK_COLOR,\r\n                          border: \"none\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          Cookies.set('user', this.state.user)\r\n                          this.props.updateFlag(MAIN_FLAG);\r\n                        }}\r\n                      >\r\n                        <b>Login</b>\r\n                      </Button>\r\n                      <Button\r\n                        size=\"large\"\r\n                        style={{\r\n                          background: SECONDARY_COLOR,\r\n                          color: DARK_COLOR,\r\n                          border: \"none\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          this.props.updateFlag(ANALYTICS_FLAG);\r\n                        }}\r\n                      >\r\n                        <b>Analytics</b>\r\n                      </Button>\r\n                    </Space>\r\n                  </Col>\r\n                </Row>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Button, Card, List, Space } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { DARK_COLOR, SECONDARY_COLOR } from \"../constant\";\r\nimport { SyncOutlined, LikeFilled, ShareAltOutlined, CommentOutlined } from \"@ant-design/icons\";\r\nimport Cookies from \"js-cookie\";\r\n\r\n\r\nexport default class Posts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  fetchData = () => {\r\n    const posts = { u_name: Cookies.get(\"user\") };\r\n    fetch(\"http://localhost:8000/post/fetch\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify(posts),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          ...this.state,\r\n          data: data,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card\r\n          extra={[\r\n            <Button\r\n              size=\"large\"\r\n              style={{\r\n                background: SECONDARY_COLOR,\r\n                color: DARK_COLOR,\r\n                border: \"none\",\r\n              }}\r\n              onClick={e=>{e.preventDefault(); this.fetchData()}}\r\n              icon={<SyncOutlined color={DARK_COLOR}></SyncOutlined>}\r\n            >\r\n              <b> Refresh</b>\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={this.state.data}\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                <List.Item.Meta\r\n                  title={\r\n                    <a style={{ color: DARK_COLOR }} href=\"_\">\r\n                      {item.post_text}\r\n                    </a>\r\n                  }\r\n                  description={\r\n                    <Space align='start'>\r\n                      <LikeFilled color={DARK_COLOR} />\r\n                      <a style={{ color: DARK_COLOR }} href=\"_\">{item.likes}</a>\r\n                      <CommentOutlined color={DARK_COLOR} href=\"_\" />\r\n                      <a style={{ color: DARK_COLOR }} href=\"_\">{item.comments}</a>\r\n                      <ShareAltOutlined color={DARK_COLOR} />\r\n                      <a style={{ color: DARK_COLOR }} href=\"_\">{item.shares}</a>\r\n                    </Space>\r\n                  }\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Card, Input, Form, Upload, Row, Col, Button } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { DARK_COLOR, SECONDARY_COLOR } from \"../constant\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport default class CreatePost extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card>\r\n          <Form>\r\n            <Form.Item name=\"post\">\r\n              <Input\r\n                style={{\r\n                  background: \"transparent\",\r\n                  color: DARK_COLOR,\r\n                  borderWidth: 2,\r\n                  padding: 10,\r\n                  border: \"none\",\r\n                }}\r\n                type=\"text\"\r\n                placeholder=\"Say something nice !!!\"\r\n              ></Input>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Upload onPreview={e=>{return ;}} actions=\"none\" maxCount={1} listType=\"picture-card\">\r\n                <div>\r\n                  <PlusOutlined />\r\n                  <div style={{ marginTop: 8 }}>Upload</div>\r\n                </div>\r\n              </Upload>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Row justify=\"start\">\r\n                <Col>\r\n                  <Button\r\n                    size=\"large\"\r\n                    style={{\r\n                      background: SECONDARY_COLOR,\r\n                      color: DARK_COLOR,\r\n                      border: \"none\",\r\n                    }}\r\n                  >\r\n                    <b>Post It</b>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Layout,\r\n  Space,\r\n  Image,\r\n  Typography,\r\n  PageHeader,\r\n  Menu,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport {\r\n  BACKGROUND_COLOR,\r\n  DARK_COLOR,\r\n  LIGHT_COLOR,\r\n  SECONDARY_COLOR,\r\n} from \"../constant\";\r\nimport Posts from \"./Posts\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst { Content, Sider } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default class Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { groups: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const groups = { u_name: Cookies.get(\"user\") };\r\n    fetch(\"http://localhost:8000/group/fetch\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify(groups),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          ...this.state,\r\n          groups: data.groups,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    var groups = [];\r\n    this.state.groups.forEach((e) => {\r\n      groups.push(<Menu.Item key={e}>{e}</Menu.Item>);\r\n    });\r\n    return (\r\n      <>\r\n        <Layout style={{ height: \"100vh\" }}>\r\n          <PageHeader\r\n            style={{\r\n              background: BACKGROUND_COLOR,\r\n              paddingLeft: 20,\r\n              paddingTop: 5,\r\n              paddingBottom: 5,\r\n            }}\r\n          >\r\n            <Space align=\"top\">\r\n              <Image\r\n                align=\"center\"\r\n                preview={false}\r\n                width={40}\r\n                src=\"./../assets/streaming.png\"\r\n              />\r\n              <Title\r\n                style={{\r\n                  fontSize: 35,\r\n                  color: SECONDARY_COLOR,\r\n                }}\r\n              >\r\n                Streamer\r\n              </Title>\r\n            </Space>\r\n          </PageHeader>\r\n          <Layout>\r\n            <Sider style={{ background: DARK_COLOR }}>\r\n              <Menu\r\n                style={{ background: \"transparent\" }}\r\n                defaultSelectedKeys={\r\n                  this.state.groups.length !== 0 ? [this.state.groups[0]] : 0\r\n                }\r\n                theme=\"dark\"\r\n              >\r\n                {groups}\r\n              </Menu>\r\n            </Sider>\r\n            <Content\r\n              style={{\r\n                background: LIGHT_COLOR,\r\n                padding: 20,\r\n                overflowY: \"auto\",\r\n              }}\r\n            >\r\n              <Row style={{ paddingBottom: 10 }}>\r\n                <Col span={24}>\r\n                  <CreatePost></CreatePost>\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ paddingTop: 10 }}>\r\n                <Col span={24}>\r\n                  <Posts></Posts>\r\n                </Col>\r\n              </Row>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Layout,\r\n  Space,\r\n  Image,\r\n  Typography,\r\n  PageHeader,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Alert,\r\n} from \"antd\";\r\nimport { BACKGROUND_COLOR, LIGHT_COLOR, SECONDARY_COLOR } from \"../constant\";\r\nimport { io } from \"socket.io-client\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { Line, Chart } from \"react-chartjs-2\";\r\nimport \"chartjs-adapter-luxon\";\r\nimport StreamingPlugin from \"chartjs-plugin-streaming\";\r\n\r\nChart.register(StreamingPlugin);\r\n\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\nconst socket = io(\"ws://localhost:3001/\");\r\n\r\nexport default class Analytics extends Component {\r\n  intervalID = undefined;\r\n  duration = 600000;\r\n  refresh = 30000;\r\n\r\n  optionsActiveUsers = {\r\n    animation: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n        type: \"realtime\",\r\n        realtime: {\r\n          duration: this.duration,\r\n          refresh: this.refresh,\r\n          onRefresh: (chart) => {\r\n            chart.data.datasets.forEach((dataset) => {\r\n              dataset.data.push({\r\n                x: Date.now(),\r\n                y: this.state.active_user,\r\n              });\r\n            });\r\n          },\r\n        },\r\n      },\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  optionsLikes = {\r\n    animation: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n        type: \"realtime\",\r\n        realtime: {\r\n          duration: this.duration,\r\n          refresh: this.refresh,\r\n          onRefresh: (chart) => {\r\n            chart.data.datasets.forEach((dataset) => {\r\n              dataset.data.push({\r\n                x: Date.now(),\r\n                y: this.state.likes,\r\n              });\r\n            });\r\n          },\r\n        },\r\n      },\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  optionsPosts = {\r\n    animation: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n        type: \"realtime\",\r\n        realtime: {\r\n          duration: this.duration,\r\n          refresh: this.refresh,\r\n          onRefresh: (chart) => {\r\n            chart.data.datasets.forEach((dataset) => {\r\n              dataset.data.push({\r\n                x: Date.now(),\r\n                y: this.state.posts,\r\n              });\r\n            });\r\n          },\r\n        },\r\n      },\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  optionsShares = {\r\n    animation: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n        type: \"realtime\",\r\n        realtime: {\r\n          duration: this.duration,\r\n          refresh: this.refresh,\r\n          onRefresh: (chart) => {\r\n            chart.data.datasets.forEach((dataset) => {\r\n              dataset.data.push({\r\n                x: Date.now(),\r\n                y: this.state.shares,\r\n              });\r\n            });\r\n          },\r\n        },\r\n      },\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  optionsComments = {\r\n    animation: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n        type: \"realtime\",\r\n        realtime: {\r\n          duration: this.duration,\r\n          refresh: this.refresh,\r\n          onRefresh: (chart) => {\r\n            chart.data.datasets.forEach((dataset) => {\r\n              dataset.data.push({\r\n                x: Date.now(),\r\n                y: this.state.comments,\r\n              });\r\n            });\r\n          },\r\n        },\r\n      },\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active_user: 0,\r\n      likes: 0,\r\n      posts: 0,\r\n      comments: 0,\r\n      emotions: {},\r\n      shares: 0,\r\n      data: {\r\n        datasets: [\r\n          {\r\n            fill: false,\r\n            backgroundColor: \"rgb(255, 99, 132)\",\r\n            borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n            tension: 0.2,\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n\r\n  filterMessages = (message) => {\r\n    var tag = message.tag;\r\n    var data = message.data;\r\n\r\n    if (tag === \"logins\") {\r\n      var active_user = parseInt(data.active_users);\r\n      this.setState({\r\n        ...this.state,\r\n        active_user: active_user,\r\n      });\r\n    } else if (tag === \"likes\") {\r\n      var likes = parseInt(data.no_of_likes);\r\n      this.setState({\r\n        ...this.state,\r\n        likes: likes,\r\n      });\r\n    } else if (tag === \"shares\") {\r\n      var shares = parseInt(data.no_of_shares);\r\n      this.setState({\r\n        ...this.state,\r\n        shares: shares,\r\n      });\r\n    } else if (tag === \"comments\") {\r\n      var comments = parseInt(data.no_of_comments);\r\n      this.setState({\r\n        ...this.state,\r\n        comments: comments,\r\n      });\r\n    } else if (tag === \"posts\") {\r\n      var posts = parseInt(data.no_of_posts);\r\n      this.setState({\r\n        ...this.state,\r\n        posts: posts,\r\n      });\r\n    } else if (tag === \"emotions\") {\r\n      this.setState({\r\n        ...this.state,\r\n        emotions: data,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    socket.on(\"message\", (message) => {\r\n      this.filterMessages(JSON.parse(message));\r\n    });\r\n    setInterval(this.forceUpdate(), 1000);\r\n  }\r\n\r\n  render() {\r\n    var DONUT_CHART_HEIGHT = 250;\r\n    var CARD_HEIGHT = \"45vh\";\r\n\r\n    var activeUsersSeries = [\r\n      { name: \"Active Users\", data: this.state.active_user },\r\n    ];\r\n    var emotionsSeries = [];\r\n    var emotionsLabels = [];\r\n    Object.keys(this.state.emotions).forEach((e) => {\r\n      emotionsLabels.push(this.state.emotions[e][\"p_emotion\"]);\r\n      emotionsSeries.push(parseInt(this.state.emotions[e][\"count\"]));\r\n    });\r\n\r\n    console.log(activeUsersSeries);\r\n\r\n    return (\r\n      <>\r\n        <Layout style={{ height: \"100vh\" }}>\r\n          <PageHeader\r\n            style={{\r\n              background: BACKGROUND_COLOR,\r\n              paddingLeft: 20,\r\n              paddingTop: 5,\r\n              paddingBottom: 5,\r\n            }}\r\n          >\r\n            <Space align=\"top\">\r\n              <Image\r\n                align=\"center\"\r\n                preview={false}\r\n                width={40}\r\n                src=\"./../assets/streaming.png\"\r\n              />\r\n              <Title\r\n                style={{\r\n                  fontSize: 35,\r\n                  color: SECONDARY_COLOR,\r\n                }}\r\n              >\r\n                Streamer Analytics\r\n              </Title>\r\n            </Space>\r\n          </PageHeader>\r\n          <Layout>\r\n            <Content\r\n              style={{\r\n                background: LIGHT_COLOR,\r\n                padding: 10,\r\n                overflowY: \"auto\",\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col style={{ padding: 5 }} span={8}>\r\n                  <Card\r\n                    title=\"Active Users Trend\"\r\n                    style={{ height: CARD_HEIGHT }}\r\n                  >\r\n                    <Line\r\n                      data={this.state.data}\r\n                      options={this.optionsActiveUsers}\r\n                    />\r\n                  </Card>\r\n                </Col>\r\n                <Col style={{ padding: 5 }} span={8}>\r\n                  <Card title=\"Likes Trend\" style={{ height: CARD_HEIGHT }}>\r\n                    <Line data={this.state.data} options={this.optionsLikes} />\r\n                  </Card>\r\n                </Col>\r\n                <Col style={{ padding: 5 }} span={8}>\r\n                  <Card\r\n                    title=\"Posts Users Trend\"\r\n                    style={{ height: CARD_HEIGHT }}\r\n                  >\r\n                    <Line data={this.state.data} options={this.optionsPosts} />\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col style={{ padding: 5 }} span={8}>\r\n                  <Card\r\n                    title=\"Comments Users Trend\"\r\n                    style={{ height: CARD_HEIGHT }}\r\n                  >\r\n                    <Line\r\n                      data={this.state.data}\r\n                      options={this.optionsComments}\r\n                    />\r\n                  </Card>\r\n                </Col>\r\n                <Col style={{ padding: 5 }} span={8}>\r\n                  <Card\r\n                    title=\"Shares Users Trend\"\r\n                    style={{ height: CARD_HEIGHT }}\r\n                  >\r\n                    <Line data={this.state.data} options={this.optionsShares} />\r\n                  </Card>\r\n                </Col>\r\n                <Col style={{ padding: 5 }} span={8}>\r\n                  <Card\r\n                    title=\"User Emotion over posts\"\r\n                    style={{ height: CARD_HEIGHT }}\r\n                  >\r\n                    {emotionsSeries.length === 0 ? (\r\n                      <Alert message=\"Please Wait\" type=\"info\" showIcon></Alert>\r\n                    ) : (\r\n                      <ApexChart\r\n                        series={emotionsSeries}\r\n                        options={{ labels: emotionsLabels }}\r\n                        type=\"donut\"\r\n                        height={DONUT_CHART_HEIGHT}\r\n                      />\r\n                    )}\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import Login from \"./Pages/Login\";\n\nimport React, { Component } from \"react\";\nimport { ANALYTICS_FLAG, LOGIN_FLAG } from \"./constant\";\nimport Main from \"./Pages/Main\";\nimport Analytics from \"./Pages/Analytics\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      FLAG: LOGIN_FLAG,\n    };\n  }\n\n  updateFlag = (flag) => {\n    this.setState({\n      FLAG: flag,\n    });\n  };\n\n  render() {\n    if (this.state.FLAG === LOGIN_FLAG) {\n      return (\n        <div>\n          <Login updateFlag={this.updateFlag}></Login>\n        </div>\n      );\n    } else if (this.state.FLAG === ANALYTICS_FLAG) {\n      return (\n        <div>\n          <Analytics updateFlag={this.updateFlag}></Analytics>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Main></Main>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport \"./css/index.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}